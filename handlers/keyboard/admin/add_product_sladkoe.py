import os
from bot.bot import dp
from base.base import SessionLocal
from base.models import Category, Product
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove
from keyboard.admin.inline.navigate_admin_home import home_nav_admin
from status_machine.admin.add_new_product_sweet import AddNewProductSweet


@dp.message_handler(text="–°–ª–∞–¥–∫–æ–µ ü•ê")
async def add_new_product_sld_category(msg: Message):
    await msg.answer(
        text="‚ö° –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ ‚ö°\n\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è <b>–°–ª–∞–¥–∫–æ–µ</b> ü•ê"
             "\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ ‚úç",
        parse_mode="HTML",
        reply_markup=ReplyKeyboardRemove()
    )

    await AddNewProductSweet.name.set()


@dp.message_handler(state=AddNewProductSweet.name)
async def name_product_sweet(msg: Message, state: FSMContext):

    async with state.proxy() as data:
        data['name_product_sweet'] = msg.text

    await msg.answer(
        text="–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –û–ø–∏—Å–∞–Ω–∏–µ –≠—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞\n"
             "\n ü§ñ –î–∞–π—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ–± —ç—Ç–æ–º —Ç–æ–≤–∞—Ä–µ\n"
             "\n–ù–∞–ø—Ä–∏–º–µ—Ä: "
             "\n***** –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å *****"
             "\n***** –î–∞—Ç–∞ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è *****"
             "\n***** –°—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è *****"
             "\n–°–æ—Å—Ç–∞–≤ –∏ –¥—Ä—É–≥–æ–µ"
    )

    await AddNewProductSweet.description.set()


@dp.message_handler(state=AddNewProductSweet.description)
async def description_product_sweet(msg: Message, state: FSMContext):

    async with state.proxy() as data:
        data['description_product_sweet'] = msg.text

    await msg.answer(
        text="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ø–µ—Ä—å —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ üí∞\n\n–ù–∞–ø—Ä–∏–º–µ—Ä -> 10.00 "
    )

    await AddNewProductSweet.price.set()


@dp.message_handler(state=AddNewProductSweet.price)
async def price_product_sweet(msg: Message, state: FSMContext):

    async with state.proxy() as data:
        data['price_product_sweet'] = msg.text

    await msg.answer(
        text="–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –§–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞ üì∏"
    )

    await AddNewProductSweet.url_photo.set()


@dp.message_handler(state=AddNewProductSweet.url_photo, content_types=['photo'])
async def url_photo_product_sweet(msg: Message, state: FSMContext):

    session = SessionLocal()

    category = session.query(Category.id).filter_by(name='–°–ª–∞–¥–∫–æ–µ').first()

    if not category:
        category = Category(
            name="–°–ª–∞–¥–∫–æ–µ"
        )
        session.add(category)
        session.commit()

    img_sweet_save_url = 'img/img_product/sweet'
    os.makedirs(img_sweet_save_url, exist_ok=True)

    photo_sweet_url = f"{img_sweet_save_url}/{msg.photo[-1].file_id}.png"
    await msg.photo[-1].download(destination_file=photo_sweet_url)

    async with state.proxy() as data:
        data['url_photo_product_sweet'] = photo_sweet_url

    await state.finish()

    new_product = Product(
        name=data['name_product_sweet'],
        description=data['description_product_sweet'],
        price=data['price_product_sweet'],
        photo=data['url_photo_product_sweet'],
        category_id=category.id
    )
    session.add(new_product)
    session.commit()
    session.close()

    await msg.answer(
        text="‚ö° –î–æ–±–∞–≤–ª–µ–Ω –ù–æ–≤—ã–π —Ç–æ–≤–∞—Ä ‚ö°\n"
             "\n–£—Å–ø–µ—à–Ω–æ –î–æ–±–∞–≤–ª–µ–Ω–æ ‚úÖ\n"
             "–¢–æ–≤–∞—Ä —Å –ö–∞—Ç–µ–≥–æ—Ä–∏–µ–π -> –°–ª–∞–¥–∫–æ–µ ü•ê",
        reply_markup=home_nav_admin
    )

    # –û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    try:
        for i in range(msg.message_id, 0, -1):
            await dp.bot.delete_message(msg.from_user.id, i)
    except: ...