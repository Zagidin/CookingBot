from os import getenv
from bot.bot import dp
from base.models import Admin
from dotenv import load_dotenv
from aiogram.types import Message
from base.base import SessionLocal


load_dotenv()


@dp.message_handler(commands=["support", "–ø–æ–¥–¥–µ—Ä–∂–∫–∞"])
async def bot_admin_support(msg: Message):
    session = SessionLocal()

    admin_data = session.query(
        Admin.admin_name, Admin.admin_phone, Admin.admin_tg_id
    ).all()

    if admin_data:
        for admin in admin_data:
            admin_tg_id = admin[2]

            try:
                tg_user = await dp.bot.get_chat(admin_tg_id)
                username = tg_user.username if tg_user.username else "–ù–µ —É–∫–∞–∑–∞–Ω"
            except:
                username = "–ù–µ –Ω–∞–π–¥–µ–Ω"

            await msg.answer(
                text=f"‚ö° –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ü–µ–∫–∞—Ä–Ω–∏ ‚ö°\n\n"
                f" üö© –ò–º—è: <a href='https://t.me/{username}'>{admin[0]}</a>\n"
                f" ‚òé –¢–µ–ª–µ—Ñ–æ–Ω: +{admin[1]}\n",
                parse_mode="HTML",
            )
    else:
        await msg.answer(
            text=f"üö© –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω üö©\n\n"
            f"ü§ñ <i><b>–ù–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–¥–º–∏–Ω–µ, –ø–æ—Ö–æ–∂–µ –∞–¥–º–∏–Ω –Ω–µ –±—ã–ª –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω</b></i> ‚ùå\n\n"
            f"‚òé –ù–æ–º–µ—Ä –ì–æ—Ä—è—á–µ–π –õ–∏–Ω–∏–∏: +{getenv('ADMIN_PHONE_SUPPORT')}",
            parse_mode="HTML",
        )
